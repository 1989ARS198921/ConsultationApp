// <auto-generated />
using System;
using ConsultationApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsultationApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251002064955_AddClientsAndConsultants")]
    partial class AddClientsAndConsultants
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("ConsultationApp.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivan@example.com",
                            Name = "Иван Иванов"
                        },
                        new
                        {
                            Id = 2,
                            Email = "maria@example.com",
                            Name = "Мария Петрова"
                        });
                });

            modelBuilder.Entity("ConsultationApp.Models.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Consultants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Анна Смирнова",
                            Specialty = "Психолог"
                        });
                });

            modelBuilder.Entity("ConsultationApp.Models.Consultation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConsultantId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ConsultantId");

                    b.ToTable("Consultations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            ConsultantId = 1,
                            DateTime = new DateTime(2025, 4, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "booked"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            ConsultantId = 1,
                            DateTime = new DateTime(2025, 4, 6, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "booked"
                        });
                });

            modelBuilder.Entity("ConsultationApp.Models.Consultation", b =>
                {
                    b.HasOne("ConsultationApp.Models.Client", "Client")
                        .WithMany("Consultations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsultationApp.Models.Consultant", "Consultant")
                        .WithMany("Consultations")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Consultant");
                });

            modelBuilder.Entity("ConsultationApp.Models.Client", b =>
                {
                    b.Navigation("Consultations");
                });

            modelBuilder.Entity("ConsultationApp.Models.Consultant", b =>
                {
                    b.Navigation("Consultations");
                });
#pragma warning restore 612, 618
        }
    }
}
